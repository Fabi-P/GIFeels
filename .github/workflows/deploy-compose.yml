name: Deploy to AWS EC2
permissions:
  contents: read
  packages: write


on:
  workflow_dispatch:

jobs:
  push_to_registry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_PAT }}
      
      - name: Env variable assignment
        run: echo "IMAGE_REPO=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      
        # Build and push new docker image, skip for manual redeploy other than 'latest'
      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          context: .
          push: true
          tags: ghcr.io/${{ env.IMAGE_REPO }}:latest
  
  deploy:
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
        - name: Print working directory and list files
          run: |
            pwd
            ls -lah
        - name: Copy docker-compose file to target server
          uses: appleboy/scp-action@v0.1.3
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            port: 22
            key: ${{ secrets.EC2_SSH_KEY }}
            source: "${{ github.workspace }}/compose.prod.yml"
            target: "/home/${{ secrets.EC2_USER }}/app"

        - name: SSH into EC2 and Deploy
          uses: appleboy/ssh-action@v0.1.6
          env:
            IMAGE_REPO: "ghcr.io/${{ env.IMAGE_REPO }}:latest"
            GIPHY_API_KEY: ${{ secrets.GIPHY_API_KEY }}
            SECRET_KEY: ${{ secrets.SECRET_KEY }}
            GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
            GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
            CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
                set -e
                echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

                cd /home/${{ secrets.EC2_USER }}/app           
                
                docker compose -f compose.prod.yml up -d --pull always --remove-orphans --force-recreate